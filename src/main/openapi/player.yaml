openapi: 3.0.0
info:
  description: "Poker Player API"
  version: 1.0.0
  title: Poker Player API
tags:
  - name: Bet
paths:
  /:
    post:
      summary: Request a bet based on the table state.
      tags:
        - Bet
      description: "Accepts a table object and calculates the bet based on it. Returns an integer value of the bet size."
      operationId: getBet
      requestBody:
        $ref: "#/components/requestBodies/Table"
      responses:
        "200":
          description: The bet made by the player.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Bet"
components:
  requestBodies:
    Table:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Table"
      description: "Table object that represents the current game state."
      required: true
  schemas:
    Bet:
      description: "The player's bet."
      type: "object"
      properties:
        bet:
          type: "integer"
          format: "int32"
    Rank:
      description: "The rank of a card."
      type: "string"
      enum:
        - "A"
        - "K"
        - "Q"
        - "J"
        - "10"
        - "9"
        - "8"
        - "7"
        - "6"
        - "5"
        - "4"
        - "3"
        - "2"
    Suit:
      description: "The suit of a card."
      type: "string"
      enum:
        - "HEARTS"
        - "SPADES"
        - "CLUBS"
        - "DIAMONDS"
    Card:
      description: "A playing card."
      type: "object"
      required:
        - "rank"
        - "suit"
      properties:
        rank:
          $ref: "#/components/schemas/Rank"
        suit:
          $ref: "#/components/schemas/Suit"
    Table:
      description: "The poker table, representing the current game state."
      type: "object"
      required:
        - "communityCards"
        - "players"
        - "round"
        - "smallBlind"
        - "minimumBet"
        - "minimumRaise"
        - "pot"
        - "activePlayer"
        - "currentDealer"
      properties:
        communityCards:
          description: "The list of community cards on the table, visible to everyone."
          type: "array"
          items:
            $ref: "#/components/schemas/Card"
          minItems: 0
          maxItems: 5
        players:
          description: "The list of players at the table, including you."
          type: "array"
          items:
            $ref: "#/components/schemas/Player"
          minItems: 2
          maxItems: 10
        round:
          description: "The number of the current round."
          type: "integer"
          format: "int32"
          minimum: 0
        smallBlind:
          description: "The current small blind of this round."
          type: "integer"
          format: "int32"
          minimum: 0
        minimumBet:
          description: "The minimum amount of chips you have to bet if you want to keep playing."
          type: "integer"
          format: "int32"
          minimum: 0
        minimumRaise:
          description: "The minimum amount of chips you have to bet if you want to raise."
          type: "integer"
          format: "int32"
          minimum: 0
        pot:
          description: "The current size of the pot of this round."
          type: "integer"
          format: "int32"
          minimum: 0
        activePlayer:
          description: "The index of the player whose turn it is. It's you!"
          type: "integer"
          format: "int32"
          minimum: 0
          maximum: 9
        currentDealer:
          description: "The index of the player who is the dealer of this round."
          type: "integer"
          format: "int32"
          minimum: 0
          maximum: 9
    Player:
      description: "A player at the poker table."
      type: "object"
      required:
        - "name"
        - "status"
        - "stack"
        - "bet"
      properties:
        name:
          description: "The player name."
          type: "string"
        status:
          description: "The player's status. Indicates whether they are still in the game (ACTIVE), they have folded their current cards (FOLDED) or they are out of chips (OUT)."
          type: "string"
          enum:
            - "ACTIVE"
            - "FOLDED"
            - "OUT"
        stack:
          description: "The player's chip stack."
          type: "integer"
          format: "int32"
          minimum: 0
        bet:
          description: "The player's current bet."
          type: "integer"
          format: "int32"
          minimum: 0
        cards:
          description: "The player's cards. Will only be provided for the active player, i.e. you!"
          type: "array"
          items:
            $ref: "#/components/schemas/Card"
